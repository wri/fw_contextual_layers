openapi: 3.1.0
info:
  title: fw_contextual_layers
  version: '1.0'
servers:
  - url: 'https://api.resourcewatch.org/v1'
    description: Production
  - url: 'https://gfw-staging.globalforestwatch.org/v1'
    description: Staging
  - url: 'http://localhost:3025/v1'
    description: Local
paths:
  /contextual-layer:
    get:
      summary: Get all contextual layers
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Layers'
        '401':
          $ref: '#/components/responses/Error'
      operationId: get-contextual-layer
    post:
      summary: Create contextual layer
      operationId: post-contextual-layer
      responses:
        '200':
          $ref: '#/components/responses/Layer'
        '401':
          $ref: '#/components/responses/Error'
      requestBody:
        $ref: '#/components/requestBodies/Layer'
  '/contextual-layer/{layerId}':
    parameters:
      - schema:
          type: string
        name: layerId
        in: path
        required: true
    patch:
      summary: Update contextual layer
      operationId: patch-contextual-layer
      responses:
        '200':
          $ref: '#/components/responses/Layer'
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Layer'
    delete:
      summary: Delete contextual layer
      operationId: delete-contextual-layer
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
  '/contextual-layer/team/{teamId}':
    post:
      summary: Create contextual layer for a team
      operationId: post-team-contextual-layer
      responses:
        '200':
          $ref: '#/components/responses/Layer'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
      requestBody:
        $ref: '#/components/requestBodies/Layer'
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        required: true
  '/contextual-layer/loss-layer/{startYear}/{endYear}/{z}/{x}/{y}.png':
    get:
      summary: Get loss layer image
      tags: []
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: object
                properties: {}
        '401':
          $ref: '#/components/responses/Error'
        '404':
          description: Not Found
      operationId: get-loss-layer-image
      description: Retrieving hansen tile png
    parameters:
      - schema:
          type: string
        name: startYear
        in: path
        required: true
      - schema:
          type: string
        name: endYear
        in: path
        required: true
      - schema:
          type: string
        name: z
        in: path
        required: true
      - schema:
          type: string
        name: x
        in: path
        required: true
      - schema:
          type: string
        name: 'y'
        in: path
        required: true
  /fw_contextual_layers/healthcheck:
    get:
      summary: Healthcheck
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Healthcheck'
      operationId: get-fw_api-healthcheck
components:
  schemas:
    Layer:
      title: Layer
      type: object
      properties:
        isPublic:
          type: boolean
          default: false
        name:
          type: string
        url:
          type: string
        description:
          type: string
        owner:
          type: object
          required:
            - id
            - type
          properties:
            id:
              type: string
              description: Owner ObjectId
              readOnly: true
            type:
              type: string
              readOnly: true
          readOnly: true
        enabled:
          type: boolean
          default: false
        createdAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - isPublic
        - name
        - url
        - owner
        - enabled
        - createdAt
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
  requestBodies:
    Layer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Layer'
          examples: {}
  responses:
    Layer:
      description: Layer response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  attribute:
                    $ref: '#/components/schemas/Layer'
          examples:
            Layer:
              value:
                data:
                  id: string
                  type: string
                  attribute:
                    isPublic: false
                    name: string
                    url: string
                    description: string
                    owner:
                      id: string
                      type: string
                    enabled: false
                    createdAt: '2019-08-24T14:15:22Z'
    Layers:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    attributes:
                      $ref: '#/components/schemas/Layer'
          examples:
            Layers:
              value:
                data:
                  - id: string
                    type: string
                    attributes:
                      isPublic: false
                      name: string
                      url: string
                      description: string
                      owner:
                        id: string
                        type: string
                      enabled: false
                      createdAt: '2019-08-24T14:15:22Z'
    Error:
      description: Error Response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              errors:
                type: array
                uniqueItems: true
                minItems: 1
                items:
                  required:
                    - status
                    - detail
                  properties:
                    status:
                      type: number
                    detail:
                      type: string
                      minLength: 1
            required:
              - errors
          examples: {}
    Healthcheck:
      description: Healthcheck response
      content:
        application/json:
          schema:
            type: object
            properties:
              uptime:
                type: number
          examples: {}
